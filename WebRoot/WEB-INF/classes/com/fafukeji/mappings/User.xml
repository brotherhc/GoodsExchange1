<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fafukeji.dao.UserDao" >
  <resultMap id="BaseResultMap" type="com.fafukeji.model.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="imei" property="imei" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="email_key" property="emailKey" jdbcType="VARCHAR" />
    <result column="is_verify" property="isVerify" jdbcType="VARCHAR" />
    <result column="account_type" property="accountType" jdbcType="BIT" />
    <result column="thirdparty_account_key" property="thirdpartyAccountKey" jdbcType="VARCHAR" />
    <result column="user_level" property="userLevel" jdbcType="BIT" />
    <result column="user_score" property="userScore" jdbcType="INTEGER" />
    <result column="user_level_name" property="userLevelName" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="BIT" />
    <result column="is_admin" property="isAdmin" jdbcType="BIT" />
    <result column="del_flag" property="delFlag" jdbcType="BIT" />
    <result column="updated_at" property="updatedAt" jdbcType="INTEGER" />
    <result column="created_at" property="createdAt" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, mobile, username, password, imei, email, email_key, is_verify, account_type,
    thirdparty_account_key, user_level, user_score, user_level_name, state, is_admin,
    del_flag, updated_at, created_at
  </sql>
  <select id="selectUserById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=INTEGER}
  </select>
  <!-- 根据手机号或用户名查询用户 -->
  <select id="getByMobileOrUsername" resultMap="BaseResultMap" parameterType="com.fafukeji.model.User">
    SELECT
    <include refid="Base_Column_List"/>
    FROM users a WHERE (a.mobile = #{mobile} or a.username = #{mobile}) AND a.del_flag = #{DEL_FLAG_NORMAL}
  </select>
  <!-- 根据手机号或用户名查询用户 -->
  <select id="getByUsername" resultMap="BaseResultMap" parameterType="com.fafukeji.model.User">
    SELECT
    <include refid="Base_Column_List"/>
    FROM users a WHERE  a.username = #{username} AND a.del_flag = #{DEL_FLAG_NORMAL}
  </select>

  <!-- 根据手机号或用户名查询用户 -->
  <select id="getByMobile" resultMap="BaseResultMap" parameterType="com.fafukeji.model.User">
    SELECT
    <include refid="Base_Column_List"/>
    FROM users a WHERE a.del_flag = #{DEL_FLAG_NORMAL}
    <if test="mobile != null" >
      and a.mobile = #{mobile}
    </if>
    <if test="username != null" >
      and a.username = #{username}
    </if>
  </select>

  <!-- 判断用户名是否已经被使用 -->
  <select id="getByMobileAndUsername" resultMap="BaseResultMap" parameterType="com.fafukeji.model.User">
    SELECT
    <include refid="Base_Column_List"/>
    FROM users a WHERE a.del_flag = #{DEL_FLAG_NORMAL}
    <if test="mobile != null" >
      and (a.mobile = #{mobile} or a.username=#{mobile})
    </if>
    <if test="username != null" >
      and (a.username = #{username} or a.mobile = #{username})
    </if>
    <if test="state != NULL" ></if>
  </select>

  <!-- 根据代理key查询用户 -->
  <select id="getByAgentKey" resultMap="BaseResultMap" parameterType="com.fafukeji.model.User">
    SELECT
    <include refid="Base_Column_List"/>
    FROM users a WHERE a.is_agent=#{isAgent} and a.agent_key = #{agentKey} AND a.del_flag = #{DEL_FLAG_NORMAL}
  </select>


  <!-- 根据  -->
  <select id="getByState" resultMap="BaseResultMap" parameterType="com.fafukeji.model.User">
    SELECT id FROM users a WHERE a.state = #{state} AND a.del_flag = #{DEL_FLAG_NORMAL} AND a.is_admin = #{USER}
  </select>
  <!--模糊查询用户名 -->
  <select id="userInfo" resultMap="BaseResultMap" parameterType="com.fafukeji.model.User">
   SELECT
users.username,
users.id,
users.mobile,
users.`password`,
users.imei,
users.email,
users.email_key,
users.is_verify,
users.account_type,
users.thirdparty_account_key,
users.user_level,
users.user_score,
users.user_level_name,
users.state,
users.is_admin,
users.del_flag,
users.updated_at,
users.created_at
FROM
users
where username = "#{username}"
  </select>
  <!--where users.username like  '%zhangsan%'-->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fafukeji.model.User" >
    insert into users (id, mobile, username,
    password, imei, email,
    email_key, is_verify, account_type,
    thirdparty_account_key, user_level, user_score,
    user_level_name, state, is_admin,
    del_flag, updated_at, created_at
    )
    values (#{id,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR},
    #{password,jdbcType=VARCHAR}, #{imei,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
    #{emailKey,jdbcType=VARCHAR}, #{isVerify,jdbcType=VARCHAR}, #{accountType,jdbcType=BIT},
    #{thirdpartyAccountKey,jdbcType=VARCHAR}, #{userLevel,jdbcType=BIT}, #{userScore,jdbcType=INTEGER},
    #{userLevelName,jdbcType=VARCHAR}, #{state,jdbcType=BIT}, #{isAdmin,jdbcType=BIT},
    #{delFlag,jdbcType=BIT}, #{updatedAt,jdbcType=INTEGER}, #{createdAt,jdbcType=INTEGER}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.fafukeji.model.User" >
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="imei != null" >
        imei,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="emailKey != null" >
        email_key,
      </if>
      <if test="isVerify != null" >
        is_verify,
      </if>
      <if test="accountType != null" >
        account_type,
      </if>
      <if test="thirdpartyAccountKey != null" >
        thirdparty_account_key,
      </if>
      <if test="userLevel != null" >
        user_level,
      </if>
      <if test="userScore != null" >
        user_score,
      </if>
      <if test="userLevelName != null" >
        user_level_name,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="isAdmin != null" >
        is_admin,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="imei != null" >
        #{imei,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="emailKey != null" >
        #{emailKey,jdbcType=VARCHAR},
      </if>
      <if test="isVerify != null" >
        #{isVerify,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null" >
        #{accountType,jdbcType=BIT},
      </if>
      <if test="thirdpartyAccountKey != null" >
        #{thirdpartyAccountKey,jdbcType=VARCHAR},
      </if>
      <if test="userLevel != null" >
        #{userLevel,jdbcType=BIT},
      </if>
      <if test="userScore != null" >
        #{userScore,jdbcType=INTEGER},
      </if>
      <if test="userLevelName != null" >
        #{userLevelName,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=BIT},
      </if>
      <if test="isAdmin != null" >
        #{isAdmin,jdbcType=BIT},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=BIT},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fafukeji.model.User" >
    update users
    <set >
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="imei != null" >
        imei = #{imei,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="emailKey != null" >
        email_key = #{emailKey,jdbcType=VARCHAR},
      </if>
      <if test="isVerify != null" >
        is_verify = #{isVerify,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null" >
        account_type = #{accountType,jdbcType=BIT},
      </if>
      <if test="thirdpartyAccountKey != null" >
        thirdparty_account_key = #{thirdpartyAccountKey,jdbcType=VARCHAR},
      </if>
      <if test="userLevel != null" >
        user_level = #{userLevel,jdbcType=BIT},
      </if>
      <if test="userScore != null" >
        user_score = #{userScore,jdbcType=INTEGER},
      </if>
      <if test="userLevelName != null" >
        user_level_name = #{userLevelName,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=BIT},
      </if>
      <if test="isAdmin != null" >
        is_admin = #{isAdmin,jdbcType=BIT},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=BIT},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fafukeji.model.User" >
    update users
    set mobile = #{mobile,jdbcType=VARCHAR},
    username = #{username,jdbcType=VARCHAR},
    password = #{password,jdbcType=VARCHAR},
    imei = #{imei,jdbcType=VARCHAR},
    email = #{email,jdbcType=VARCHAR},
    email_key = #{emailKey,jdbcType=VARCHAR},
    is_verify = #{isVerify,jdbcType=VARCHAR},
    account_type = #{accountType,jdbcType=BIT},
    thirdparty_account_key = #{thirdpartyAccountKey,jdbcType=VARCHAR},
    user_level = #{userLevel,jdbcType=BIT},
    user_score = #{userScore,jdbcType=INTEGER},
    user_level_name = #{userLevelName,jdbcType=VARCHAR},
    state = #{state,jdbcType=BIT},
    is_admin = #{isAdmin,jdbcType=BIT},
    del_flag = #{delFlag,jdbcType=BIT},
    updated_at = #{updatedAt,jdbcType=INTEGER},
    created_at = #{createdAt,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getAll" resultMap="BaseResultMap">
    SELECT * FROM
     users u where (u.del_flag != 1)
  </select>
  <delete id="deleteUserById" parameterType="java.lang.Integer" >
    delete from users
    where id = #{id}
  </delete>
  <select id="selectUser" resultMap="BaseResultMap" parameterType="com.fafukeji.model.User">
  SELECT DISTINCT
users.id,users.mobile,users.username,users.`password`,users.imei,users.email,users.email_key,users.is_verify,users.account_type,users.thirdparty_account_key,users.user_level,
users.user_score,users.user_level_name,users.state,users.is_admin,users.del_flag,users.updated_at,users.created_at
FROM users
  </select>
  <select id="selecteid" resultMap="BaseResultMap" parameterType="com.fafukeji.model.User">
    SELECT DISTINCT
    users.id,users.mobile,users.username,users.`password`,users.imei,users.email,users.email_key,users.is_verify,users.account_type,users.thirdparty_account_key,users.user_level,
    users.user_score,users.user_level_name,users.state,users.is_admin,users.del_flag,users.updated_at,users.created_at
    FROM users WHERE id = #{id}
  </select>
</mapper>